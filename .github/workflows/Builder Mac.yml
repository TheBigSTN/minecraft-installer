name: App Builder macOS

on:
  push:
    branches: [main, workflows]
  pull_request:
    branches: [main, workflows]

jobs:
  build-mac:
    runs-on: macos-latest

    env:
      Project_Path: ModpackInstaller.Desktop/ModpackInstaller.Desktop.csproj
      Project_Output: ModpackInstaller.Desktop/bin/Release/net9.0-windows/osx-arm64/publish
      Pkg_Output: ModpackInstaller_macOS_arm64.pkg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore .NET project
        run: dotnet restore

      - name: Publish application
        run: dotnet publish ${{ env.Project_Path }} -c Release -r osx-arm64 --self-contained false

      - name: Get Project Version
        id: get_version
        shell: pwsh
        run: |
          [xml]$proj = Get-Content ${{ env.Project_Path }}
          $v = $proj.Project.PropertyGroup.Version
          echo "PROJECT_VERSION=$v" >> $env:GITHUB_OUTPUT

      - name: Create .pkg installer
        run: |
          mkdir -p pkg-root/Applications/ModpackInstaller.Desktop
          cp -R ${{ env.Project_Output }}* pkg-root/Applications/ModpackInstaller.Desktop/
          pkgbuild \
            --root pkg-root/Applications/ModpackInstaller.Desktop \
            --identifier com.veteran.mycsharpapp \
            --version ${{ steps.get_version.outputs.PROJECT_VERSION }} \
            --install-location /Applications/ModpackInstaller.Desktop \
            ${{ env.Pkg_Output }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.PROJECT_VERSION }}
          name: Release v${{ steps.get_version.outputs.PROJECT_VERSION }}
          draft: false
          prerelease:
            ${{ contains(steps.get_version.outputs.PROJECT_VERSION, '-beta') || 
            contains(steps.get_version.outputs.PROJECT_VERSION, '-alpha') || 
            contains(steps.get_version.outputs.PROJECT_VERSION, '-rc') }}
          files: ${{ env.Pkg_Output }}
          body: |
            Download the latest verision of the app by installing the macOs version or the win 64 version.
